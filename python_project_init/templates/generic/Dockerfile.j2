FROM python:{{ python_version }}-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    UV_CACHE_DIR=/opt/uv-cache

# Install system dependencies with retry logic
RUN apt-get update && \
    for i in 1 2 3; do \
        apt-get install -y --no-install-recommends \
            git \
            curl \
            ca-certificates \
        && break || sleep 5; \
    done && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install uv
COPY --from=ghcr.io/astral-sh/uv:latest /uv /usr/local/bin/uv

# Create app directory
WORKDIR /app

# Copy project files
COPY pyproject.toml README.md LICENSE uv.lock* ./
COPY {{ package_name }}/ ./{{ package_name }}/

# Install dependencies
RUN if [ -f "uv.lock" ]; then \
        uv sync --frozen --no-cache; \
    else \
        uv sync --no-cache; \
    fi

# Create non-root user and set up directories
RUN useradd --create-home --shell /bin/bash app && \
    mkdir -p /opt/uv-cache && \
    chown -R app:app /opt/uv-cache /app
USER app

# Expose port for FastAPI
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run the FastAPI application
CMD ["uv", "run", "uvicorn", "{{ package_name }}.app:app", "--host", "0.0.0.0", "--port", "8000"]
