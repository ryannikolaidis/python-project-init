[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{ project_name }}"
dynamic = ["version"]
description = "{{ description }}"
readme = "README.md"
license = "MIT"
requires-python = ">={{ python_version }}"
authors = [
    { name = "{{ author_name }}", email = "{{ author_email }}" },
]
keywords = []
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: {{ python_version }}",
]
dependencies = [{% if entry_point %}
    "typer>=0.12.0",
    "rich>=13.0.0",{% endif %}{% if create_api %}
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",{% endif %}
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.4.0",
    "black>=24.0.0",
    "pyright>=1.1.300",
    "pre-commit>=3.6.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",{% if create_api %}
    "httpx>=0.27.0",
    "pytest-asyncio>=0.24.0",{% endif %}
]
{% if entry_point and not create_api %}
[project.scripts]
{{ project_name }} = "{{ package_name }}.cli:main"
{% endif %}
[project.urls]
Homepage = "https://github.com/{{ github_username }}/{{ project_name }}"
Repository = "https://github.com/{{ github_username }}/{{ project_name }}"
Issues = "https://github.com/{{ github_username }}/{{ project_name }}/issues"

[tool.hatch.version]
path = "src/{{ package_name }}/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/{{ package_name }}"]

[tool.ruff]
line-length = 100
target-version = "py{{ python_version.replace('.', '') }}"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]

[tool.ruff.lint.isort]
known-first-party = ["{{ package_name }}"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.black]
line-length = 100
target-version = ['py{{ python_version.replace('.', '') }}']

[tool.pyright]
pythonVersion = "{{ python_version }}"
typeCheckingMode = "standard"
# Fast and accurate type checking
useLibraryCodeForTypes = true
# Exclude tests by default for faster checking
exclude = [
    "tests/",
    ".venv/",
    "build/",
    "dist/",
]
# Report settings
reportMissingImports = true
reportMissingTypeStubs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --cov=src/{{ package_name }} --cov-report=term-missing"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
